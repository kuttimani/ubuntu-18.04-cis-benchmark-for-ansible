---

- name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/filesystem-blacklist.conf
    line: 'install cramfs /bin/true'
    state: present
    create: yes

- name: 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/filesystem-blacklist.conf
    line: 'install freevxfs /bin/true'
    state: present
    create: yes

- name: 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/filesystem-blacklist.conf
    line: 'install jffs2 /bin/true'
    state: present
    create: yes

- name: 1.1.1.4 Ensure mounting of hfs filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/filesystem-blacklist.conf
    line: 'install hfs /bin/true'
    state: present
    create: yes

- name: 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/filesystem-blacklist.conf
    line: 'install hfsplus /bin/true'
    state: present
    create: yes

- name: 1.1.1.6 Ensure mounting of udf filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/filesystem-blacklist.conf
    line: 'install udf /bin/true'
    state: present
    create: yes

- name: 1.1.2 Ensure separate partition exists for /tmp (Scored)
  debug:
    msg: "This must be completed manually."
  when: level == 2

- name: 1.1.3 Ensure nodev option set on /tmp partition (Scored)
  debug:
    msg: "This must be completed manually."

- name: 1.1.4 Ensure nosuid option set on /tmp partition (Scored)
  debug:
    msg: "This must be completed manually."

- name: 1.1.5 Ensure separate partition exists for /var (Scored)
  debug:
    msg: "This must be completed manually."
  when: level == 2

- name: 1.1.6 Ensure separate partition exists for /var/tmp (Scored)
  debug:
    msg: "This must be completed manually."
  when: level == 2

- name: 1.1.7 Ensure nodev option set on /var/tmp partition (Scored)
  debug:
    msg: "This must be completed manually."

- name: 1.1.8 Ensure nosuid option set on /var/tmp partition (Scored)
  debug:
    msg: "This must be completed manually."

- name: 1.1.9 Ensure noexec option set on /var/tmp partition (Scored)
  debug:
    msg: "This must be completed manually."

- name: 1.1.10 Ensure separate partition exists for /var/log (Scored)
  debug:
    msg: "This must be completed manually."
  when: level == 2

- name: 1.1.11 Ensure separate partition exists for /var/log/audit (Scored)
  debug:
    msg: "This must be completed manually."
  when: level == 2

- name: 1.1.12 Ensure separate partition exists for /home (Scored)
  debug:
    msg: "This must be completed manually."
  when: level == 2

- name: 1.1.13 Ensure nodev option set on /home partition (Scored)
  debug:
    msg: "This must be completed manually."

- name: 1.1.14 Ensure nodev option set on /dev/shm partition (Scored)
  mount:
    path: /dev/shm
    src: tmpfs
    fstype: tmpfs
    opts: rw,nosuid,nodev,noexec
    state: mounted

- name: 1.1.15 Ensure nosuid option set on /dev/shm partition (Scored)
  debug:
    msg: "Done."

- name: 1.1.16 Ensure noexec option set on /dev/shm partition (Scored)
  debug:
    msg: "Done."

- name: 1.1.17 Ensure nodev option set on removable media partitions (Scored)
  debug:
    msg: "This must be completed manually."

- name: 1.1.18 Ensure nosuid option set on removable media partitions (Scored)
  debug:
    msg: "This must be completed manually."

- name: 1.1.19 Ensure noexec option set on removable media partitions (Scored)
  debug:
    msg: "This must be completed manually."

- name: 1.1.20 Ensure sticky bit is set on all world-writable directories (Scored)
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  failed_when: False
  changed_when: False
  check_mode: no

- name: 1.1.21 Disable Automounting (Scored)
  apt:
    name: autofs
    state: absent
  when: (level == 2) or (profile == "server")

- name: 1.2.1 Ensure package manager repositories are configured (Not Scored)
  debug:
    msg: "This must be completed manually."

- name: 1.2.2 Ensure GPG keys are configured (Not Scored)
  lineinfile:
    path: /etc/apt/apt.conf.d/99GPG-apt
    line: 'APT::Get::AllowUnauthenticated "false";'
    state: present
    create: yes

- name: 1.3.1 Ensure AIDE is installed (Scored)
  apt:
    name: ['aide', 'aide-common']
    state: present
  when: aide == "enabled"

- name: 1.3.2 Ensure filesystem integrity is regularly checked (Scored)
  cron:
    name: "Check file integrity"
    minute: 0
    hour: 5
    job: "/usr/bin/aide.wrapper --config /etc/aide/aide.conf --check"
  when: aide == "enabled"

- name: 1.4.1 Ensure permissions on bootloader config are configured (Scored)
  file:
    path: /boot/grub/grub.cfg
    owner: root
    group: root
    mode: 0600

- name: 1.4.2 Ensure bootloader password is set (Scored)
  command: grep "^password" /boot/grub/grub.cfg
  register: boot_password
  failed_when: False
  ignore_errors: True
  changed_when: False
  when: grub_password != "disabled"

- name: 1.4.2 Ensure bootloader password is set (Scored)
  lineinfile:
    path: /etc/grub.d/40_custom
    regexp: '^{{ item.name }}'
    line: '{{ item.name }}{{ item.user }} {{ item.pass }}'
    state: present
    insertafter: EOF
  with_items:
    - { name: 'set superusers=' , user: '"root"' , pass: '' }
    - { name: 'password_pbkdf2 ' , user: 'root' , pass: '{{ grub_password }}' }
  when: grub_password != "disabled" and boot_password.rc == 1

- name: 1.4.2 Ensure bootloader password is set (Scored)
  replace:
    path: /etc/grub.d/10_linux
    regexp: '^CLASS="--class gnu-linux --class gnu --class os"'
    replace: 'CLASS="--class gnu-linux --class gnu --class os --unrestricted"'
  notify: update grub
  when: grub_password != "disabled" and boot_password.rc == 1

- name: 1.4.3 Ensure authentication required for single user mode (Scored)
  command: grep "^root:[*\!]:" /etc/shadow
  register: root_password_set
  failed_when: False
  ignore_errors: True
  changed_when: False

- name: 1.4.3 Ensure authentication required for single user mode (Scored)
  user:
    name: root
    state: present
    password: "{{ root_password }}"
  when: root_password != "disabled" and root_password_set.rc == 0

- name: 1.5.1 Ensure core dumps are restricted (Scored)
  command: grep "hard core" /etc/security/limits.conf
  register: hard_core
  failed_when: False
  changed_when: False

- name: 1.5.1 Ensure core dumps are restricted (Scored)
  lineinfile:
    path: '/etc/security/limits.conf'
    line: '* hard core 0'
    state: present
    insertbefore: '^# End of file'
  when: hard_core.rc != 0

- name: 1.5.1 Ensure core dumps are restricted (Scored)
  sysctl:
    name: fs.suid_dumpable
    value: 0
    state: present
    reload: yes

- name: 1.5.2 Ensure XD/NX support is enabled (Not Scored)
  debug:
    msg: "This must be completed manually if you are using a 32bit x86 system."

- name: 1.5.3 Ensure address space layout randomization (ASLR) is enabled (Scored)
  sysctl:
    name: kernel.randomize_va_space
    value: 2
    state: present
    reload: yes

- name: 1.5.4 Ensure prelink is disabled (Scored)
  shell: 'prelink -ua'
  ignore_errors: True
  failed_when: False

- name: 1.5.4 Ensure prelink is disabled (Scored)
  apt:
    name: prelink
    state: absent

- name: 1.6.3 Ensure SELinux or AppArmor are installed (Not Scored)
  apt:
    name: "{{ access_control }}"
    state: present
  ignore_errors: True
  when: access_control != "disabled" and level == 2

- name: 1.6.1.1 Ensure SELinux is not disabled in bootloader configuration (Scored)
  replace:
    path: /etc/default/grub
    regexp: 'selinux=0'
    replace: ''
  when: access_control == "selinux" and level == 2

- name: 1.6.1.1 Ensure SELinux is not disabled in bootloader configuration (Scored)
  replace:
    path: /etc/default/grub
    regexp: 'enforcing=0'
    replace: ''
  when: access_control == "selinux" and level == 2

- name: 1.6.1.2 Ensure the SELinux state is enforcing (Scored)
  lineinfile:
    path: /etc/selinux/config
    line: 'SELINUX={{ selinux_mode }}'
    state: present
  when: access_control == "selinux" and level == 2

- name: 1.6.1.3 Ensure SELinux policy is configured (Scored)
  lineinfile:
    path: /etc/selinux/config
    line: 'SELINUXTYPE=ubuntu'
    state: present
  when: access_control == "selinux" and level == 2

- name: 1.6.1.4 Ensure no unconfined daemons exist (Scored)
  shell: ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{ print $NF }'
  when: access_control == "selinux" and level == 2

- name: 1.6.2.1 Ensure AppArmor is not disabled in bootloader configuration (Scored)
  replace:
    path: /etc/default/grub
    regexp: 'apparmor=0'
    replace: ''
  when: access_control == "apparmor" and level == 2

- name: 1.6.2.2 Ensure all AppArmor Profiles are enforcing (Scored)
  debug:
    msg: "This must be completed manually using aa-enforce to target profiles."
  when: level == 2

- name: 1.7.1.1 Ensure message of the day is configured properly (Scored)
  lineinfile:
    path: /etc/motd
    create: yes
    line: 'Authorized uses only. All activity may be monitored and reported.'
    state: present

- name: 1.7.1.2 Ensure local login warning banner is configured properly (Scored)
  lineinfile:
    path: /etc/issue
    create: yes
    line: 'Authorized uses only. All activity may be monitored and reported.'
    state: present

- name: 1.7.1.3 Ensure remote login warning banner is configured properly (Scored)
  lineinfile:
    path: /etc/issue.net
    create: yes
    line: 'Authorized uses only. All activity may be monitored and reported.'
    state: present

- name: 1.7.1.4 Ensure permissions on /etc/motd are configured (Scored)
  file:
    path: /etc/motd
    owner: root
    group: root 
    mode: 0644

- name: 1.7.1.5 Ensure permissions on /etc/issue are configured (Scored)
  file: 
    path: /etc/issue
    owner: root 
    group: root 
    mode: 0644

- name: 1.7.1.6 Ensure permissions on /etc/issue.net are configured (Scored)
  file:
    path: /etc/issue.net
    owner: root
    group: root
    mode: 0644

- name: 1.7.2 Ensure GDM login banner is configured (Scored)
  lineinfile:
    path: /etc/gdm3/greeter.dconf-defaults
    create: yes
    line: "{{ item }}"
    state: present
  with_items:
    - "[org/gnome/login-screen]"
    - "banner-message-enable=true"
    - "banner-message-text='Authorized uses only. All activity may be monitored and reported.'"

- name: 1.8 Ensure updates, patches, and additional security software are installed (Not Scored)
  apt:
    update_cache: yes
    cache_valid_time: "3600"
    upgrade: dist
