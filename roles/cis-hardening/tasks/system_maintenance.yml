---

- name: 6.1.1 Audit system file permissions (Not Scored) 
  shell: dpkg --get-selections | grep -v deinstall | awk '{ print $1 }'
  register: dpkg_output
  when: level == 2

- name: 6.1.1 Audit system file permissions (Not Scored) 
  shell: dpkg --verify {{ item }}
  with_items: "{{ dpkg_output.stdout_lines }}"
  when: level == 2
  
- name: 6.1.2 Ensure permissions on /etc/passwd are configured (Scored)
  file:
    path: /etc/passwd
    mode: 0644
    owner: root
    group: root

- name: 6.1.3 Ensure permissions on /etc/shadow are configured (Scored)
  file:
    path: /etc/shadow
    mode: 0640
    owner: root
    group: shadow

- name: 6.1.4 Ensure permissions on /etc/group are configured (Scored)
  file:
    path: /etc/group
    mode: 0644
    owner: root
    group: root

- name: 6.1.5 Ensure permissions on /etc/gshadow are configured (Scored)
  file:
    path: /etc/gshadow
    mode: 0640
    owner: root
    group: shadow

- name: 6.1.6 Ensure permissions on /etc/passwd- are configured (Scored)
  file:
    path: /etc/passwd-
    mode: 0644
    owner: root
    group: root

- name: 6.1.7 Ensure permissions on /etc/shadow- are configured (Scored)
  file:
    path: /etc/shadow-
    mode: 0640
    owner: root
    group: shadow

- name: 6.1.8 Ensure permissions on /etc/group- are configured (Scored)
  file:
    path: /etc/group-
    mode: 0644
    owner: root
    group: root

- name: 6.1.9 Ensure permissions on /etc/gshadow- are configured (Scored)
  file:
    path: /etc/gshadow-
    mode: 0640
    owner: root
    group: shadow

- name: 6.1.10 Ensure no world writable files exist (Scored)
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002 -print
  changed_when: false
  failed_when: false
  check_mode: no
  register: world_files

- name: 6.1.10 Ensure no world writable files exist (Scored)
  debug: "{{ item }}"
  with_items: "{{world_files.stdout_lines}}"

- name: 6.1.11 Ensure no unowned files or directories exist (Scored)
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser -ls
  changed_when: false
  failed_when: false
  check_mode: no
  register: unowned_files

- name: 6.1.11 Ensure no unowned files or directories exist (Scored)
  debug: "{{ item }}"
  with_items: "{{unowned_files.stdout_lines}}"

- name: 6.1.12 Ensure no ungrouped files or directories exist (Scored)
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nogroup -ls
  changed_when: false
  failed_when: false
  check_mode: no
  register: ungrouped_files

- name: 6.1.12 Ensure no ungrouped files or directories exist (Scored)
  debug: "{{ item }}"
  with_items: "{{ungrouped_files.stdout_lines}}"

- name: 6.1.13 Audit SUID executables (Not Scored)
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -4000
  changed_when: False
  failed_when: False
  check_mode: no
  register: suid_files

- name: 6.1.13 Audit SUID executables (Not Scored)
  debug:
    msg: "Audit SUID {{ item }}"
  with_items: "{{suid_files.stdout_lines}}"

- name: 6.1.14 Audit SGID executables (Not Scored)
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -2000 
  changed_when: False
  failed_when: False
  check_mode: no
  register: gsuid_files

- name: 6.1.14 Audit SGID executables (Not Scored)
  debug:
    msg: "Audit SGID {{ item }}"
  with_items: "{{gsuid_files.stdout_lines}}"

- name: 6.2.1 Ensure password fields are not empty (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.2 Ensure no legacy "+" entries exist in /etc/passwd (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.3 Ensure no legacy "+" entries exist in /etc/shadow (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.4 Ensure no legacy "+" entries exist in /etc/group (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.5 Ensure root is the only UID 0 account (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.6 Ensure root PATH Integrity (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.7 Ensure all users' home directories exist (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.8 Ensure users' home directories permissions are 750 or more restrictive (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.8 Ensure users' home directories permissions are 750 or more restrictive (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.9 Ensure users own their home directories (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.10 Ensure users' dot files are not group or world writable (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.11 Ensure no users have .forward files (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.12 Ensure no users have .netrc files (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.13 Ensure users' .netrc Files are not group or world accessible (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.14 Ensure no users have .rhosts files (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.15 Ensure all groups in /etc/passwd exist in /etc/group (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.16 Ensure no duplicate UIDs exist (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.17 Ensure no duplicate GIDs exist (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.18 Ensure no duplicate user names exist (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.19 Ensure no duplicate group names exist (Scored)
  debug:
    msg: "This must be completed manually."

- name: 6.2.20 Ensure shadow group is empty (Scored)
  debug:
    msg: "This must be completed manually."
